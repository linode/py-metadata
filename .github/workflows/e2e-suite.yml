name: E2E Tests

on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'The hash value of the commit.'
        required: true
  push:
    branches:
      - main
      - dev

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        if: ${{ inputs.commit_sha != '' }}
        with:
          ref: ${{ inputs.commit_sha }}
          fetch-depth: 0
          submodules: 'recursive'

      - name: checkout repo
        uses: actions/checkout@v4
        if: ${{ inputs.commit_sha == '' }}
        with:
          ref: ${{ inputs.sha }}
          fetch-depth: 0
          submodules: 'recursive'

      - name: setup python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: install or update Python build system
        run: python3 -m pip install -U wheel setuptools certifi pip boto3

      - name: install test dependencies
        run: make test-deps

      - name: generate local SSH key
        run: ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""

      - name: run int-test test
        run: |
          make int-test
        env:
          CLEANUP_TEST_LINODE_INSTANCE: true
          LINODE_TOKEN: ${{ secrets.DX_LINODE_TOKEN }}

      - name: Copy report.xml from hack directory to root directory
        if: always()
        run: |
          ls -l hack/
          cp hack/*_py_metadata_test_report.xml .

      - name: Copy report to root and Upload test results
        if: always()
        run: |
          filename=$(ls | grep -E '^[0-9]{12}_py_metadata_test_report\.xml$')
          python tod_scripts/add_to_xml_test_report.py \
          --branch_name "${GITHUB_REF#refs/*/}" \
          --gha_run_id "$GITHUB_RUN_ID" \
          --gha_run_number "$GITHUB_RUN_NUMBER" \
          --xmlfile "${filename}"
          sync
          python tod_scripts/test_report_upload_script.py "${filename}"
        env:
          LINODE_CLI_OBJ_ACCESS_KEY: ${{ secrets.LINODE_CLI_OBJ_ACCESS_KEY }}
          LINODE_CLI_OBJ_SECRET_KEY: ${{ secrets.LINODE_CLI_OBJ_SECRET_KEY }}
